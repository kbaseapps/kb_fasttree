{"functions":{"run_FastTree":{"name":"run_FastTree","comment":"Method for Tree building of either DNA or PROTEIN sequences\n**\n**        input_type: MSA\n**        output_type: Tree","place":null,"input":[{"type":"kb_fasttree.FastTree_Params","comment":"FastTree Input Params"}],"output":[{"type":"kb_fasttree.FastTree_Output","comment":"FastTree Output"}]}},"module_name":"kb_fasttree","sdk_version":"1.2.6","sdk_git_commit":"cedcfc2326db32bbdb09eb6d031838a93853c530","impl_file_path":"lib/kb_fasttree/kb_fasttreeImpl.py","spec_files":[{"content":"/*\n** A KBase module: kb_fasttree\n**\n** This module runs FastTree to make Trees for either DNA or PROTEIN MSAs\n** \n*/\n\nmodule kb_fasttree {\n\n    /* \n    ** The workspace object refs are of form:\n    **\n    **    objects = ws.get_objects([{'ref': params['workspace_id']+'/'+params['obj_name']}])\n    **\n    ** \"ref\" means the entire name combining the workspace id and the object name\n    ** \"id\" is a numerical identifier of the workspace or object, and should just be used for workspace\n    ** \"name\" is a string identifier of a workspace or object.  This is received from Narrative.\n    */\n    typedef string workspace_name;\n    typedef string data_obj_name;\n    typedef string data_obj_ref;\n\n\n    /* FastTree Input Params\n    */\n    typedef structure {\n        workspace_name workspace_name;\n\tstring         desc;\n\tdata_obj_ref   input_ref;\n        data_obj_name  output_name;\n\tint            species_tree_flag;  /* boolean */\n\tdata_obj_ref   intree_ref;\n\tint            fastest;  /* boolean */\n\tint            pseudo;   /* boolean */\n\tint            gtr;      /* boolean */\n\tint            wag;      /* boolean */\n\tint            noml;     /* boolean */\n\tint            nome;     /* boolean */\n        int            cat;      /* actually is an int */\n\tint            nocat;    /* boolean */\n        int            gamma;    /* boolean */\n    } FastTree_Params;\n\n\n    /* FastTree Output\n    */\n    typedef structure {\n\tdata_obj_name report_name;\n\tdata_obj_ref  report_ref;\n        data_obj_ref  output_ref;\n    } FastTree_Output;\n\t\n\n    /*  Method for Tree building of either DNA or PROTEIN sequences\n    **\n    **        input_type: MSA\n    **        output_type: Tree\n    */\n    funcdef run_FastTree (FastTree_Params params)  returns (FastTree_Output) authentication required;\n};\n","file_name":"kb_fasttree.spec","is_main":1}],"function_places":{}}